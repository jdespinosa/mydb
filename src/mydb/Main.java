/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mydb;

import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author JDE
 */
public class Main<T> extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    
    private Database db;
    private Schema schema;
    private String db_folder_url;
    private Table table;
    private boolean isInitializing; 
    
    public Main() {
        initComponents();
        
        this.isInitializing = true;
        
        // initialize database object
        this.db_folder_url = "c:/MyDB";
        
         
        // initialize database object
        this.db = new Database(this.db_folder_url + "/db1", this.db_folder_url + "/master.schema");
        
        if(this.db == null){
            System.out.println("Error connecting to database folder");
        }
        
        
        // populate database list
        this.cmbDB.addItem("db1");
        
        // populate tables list
        this.cmbTables.addItem("student");
        this.cmbTables.addItem("table1");
        this.cmbTables.addItem("table2");
        
        // make sure nothing is selected yet
        this.cmbTables.setSelectedIndex(-1);
        
        // hide table for now
        this.tblTable.setVisible(false);
        this.isInitializing = false;
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbDB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbTables = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        lblRecCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Choose Database:");

        cmbDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDBActionPerformed(evt);
            }
        });

        jLabel2.setText("Choose Table:");

        cmbTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTablesActionPerformed(evt);
            }
        });
        cmbTables.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbTablesPropertyChange(evt);
            }
        });

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTable);

        lblRecCount.setText("0 Records");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRecCount)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDB, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(lblRecCount)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDBActionPerformed

    private void cmbTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTablesActionPerformed
        if(this.isInitializing ){
            return;
        }
        
        // System.out.println(this.cmbTables.getSelectedItem());
        if( this.cmbTables.getSelectedIndex() == -1 ){
            return;
        }
        
        // get selected table name
        String table_name = this.cmbTables.getSelectedItem().toString();
        System.out.println(table_name);
        this.table = db.getTable(table_name);
        
        // get the list of fields for this table
        String[] flds = this.table.getFieldNames();
        
        // show table 
        this.tblTable.setVisible(true);
        
        // create a blank table model
        DefaultTableModel dtm = new DefaultTableModel();
        
        // dynamically add the columns based on the field
        for(int i=0; i<flds.length; i++){
            dtm.addColumn(flds[i]);
        }
        
        // attemp to get all the records
        Field[] fields = new Field[flds.length];
        for(int i=0; i<flds.length; i++){
            fields[i] = this.table.getField(i);
        }
        Recordset rs = db.getRecords(this.table, fields, null);
        
        // make sure the table is not empty before adding
        if( rs.getRecordCount() > 0  ){ // this could also be if( !rs.isEmpty() )
            // dynamically add rows to the table
            while(rs.hasNext()){
                Record rec = rs.nextRecord();

                String[] vals = new String[flds.length];

                for(int i=0; i<vals.length; i++){
                    vals[i] = rec.getFieldValue(flds[i]).toString();
                }

                dtm.addRow(vals);
            }
        }
        
        // display total records
        this.lblRecCount.setText(rs.getRecordCount() + " Record(s)");
        
        // apply table model
        this.tblTable.setModel(dtm);
        
    }//GEN-LAST:event_cmbTablesActionPerformed

    private void cmbTablesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbTablesPropertyChange
        // TODO add your handling code here:
         
    }//GEN-LAST:event_cmbTablesPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbDB;
    private javax.swing.JComboBox<String> cmbTables;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRecCount;
    private javax.swing.JTable tblTable;
    // End of variables declaration//GEN-END:variables
}
